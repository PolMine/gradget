% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cooccurrences.R
\docType{data}
\name{Cooccurrences}
\alias{Cooccurrences}
\title{Get cooccurrences.}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
Cooccurrences
}
\description{
Reference class to generate and manage cooccurrence statistics.
}
\details{
To reduce the size of the \code{data.table} with the cooccurrence statistics, the 
parameters \code{keep} and \code{drop} provide tokens with tokens that will be kept and
dropped, respectively. The parameters are used by the \code{trim} method.
}
\section{Slots}{

\describe{
  \item{\code{partition}}{The \code{partition} for which all cooccurrences shall be computed.}
  \item{\code{p_attribute}}{character}
  \item{\code{keep}}{A list of named character vectors, names are p-attributes.}
  \item{\code{drop}}{A list of named character vectors, names are p-attributes.}
  \item{\code{method}}{The statistical test to use (such as "ll").}
  \item{\code{window}}{An integer value.}
  \item{\code{verbose}}{Logical}
  \item{\code{contextSizes}}{A \code{data.table}.}
  \item{\code{dt}}{A \code{data.table}.}
}
}

\section{Arguments}{

\describe{
  \item{\code{keep}}{}
  \item{\code{returnXML}}{}
  \item{\code{verbose}}{}
  \item{\code{x}}{}
  \item{\code{...}}{}
}
}

\section{Methods}{

\describe{
  \item{\code{$initialize(corpus = NULL, partition = NULL, p_attribute = "word", window = 5L, verbose = TRUE, drop = c(polmineR::punctuation, tm::stopwords("de")), keep = NULL)}}{Initialize.}
  \item{\code{$count()}}{Count the cooccurrence of terms. The field 'dt' is filled with a data.table with the columns 'a_id', 'b_id' and 'ab_count'.}
  \item{\code{$trim(function(action, by.id)}}{Trim the overall list of cooccurrences by dropping terms that are not frequent. Recommended to speed up computation of statistical test values.}
  \item{\code{$makeTermCooccurrenceMatrix()}}{Returns a simple triplet matrix based on the counts of term cooccurrences. If counts are not yet present, that is done first.}
  \item{\code{(method = "ll")}}{Based on counts of term cooccurrences, the data.table is enriched and statistical operations - the maths - are performed to get the significance of cooccurrences.}
  \item{\code{$getFeatureSelectionStats(reference, included = FALSE, method = "ll", verbose = TRUE)}}{}
  \item{\code{$featureSelection(reference, included = FALSE, method = "ll", verbose = TRUE, n = 250)}}{}
  \item{\code{$minimize()}}{}
  \item{\code{$as.sparseMatrix(x, col)}}{}
  \item{\code{$as.igraph(edgeAttributes = "ll", verticeAttributes = NULL, as.undirected = TRUE)}}{}
  \item{\code{$as.svg(object, layout = "kamada.kawai", verbose = TRUE, ...)}}{}
  \item{\code{$plot(...)}}{}
}
}

\examples{
\dontrun{
library(polmineR)
library(polmineR.graph)
use("GermaParl")

merkel2008 <- partition(
  "GERMAPARL", speaker = "Angela Merkel", year = 2008, interjection = FALSE,
  p_attribute = "word", name = "merkel2008"
)
terms_to_drop <- c(
  polmineR::punctuation,
  unlist(noise(p_attributes(merkel2008, p_attribute = "word")))
)

Merkel <- Cooccurrences$new(
  partition = merkel2008, p_attribute = "word", window = 5L,
  drop = terms_to_drop
)
Merkel$count()
Merkel$trim(action = "drop", by.id = TRUE)
Merkel$maths()

bt2008 <- partition(
  "GERMAPARL", year = 2008, interjection = FALSE,
  p_attribute = "word",
  name = "bt2008"
)
terms_to_drop <- c(
  polmineR::punctuation,
  unlist(noise(p_attributes(bt2008, p_attribute = "word")))
)
BT2008 <- Cooccurrences$new(partition = bt2008, p_attribute = "word", window = 5L, drop = terms_to_drop)
BT2008$count()
BT2008$trim(action = "drop", by.id = TRUE)
BT2008$maths()

Merkel2 <- copy(Merkel)
Merkel2$featureSelection(reference = BT2008, included = TRUE)

G <- Merkel$as.igraph(as.undirected = TRUE)
G <- addCommunities(G, method = "fastgreedy", weights = FALSE)
G <- addCoordinates(G, layout = "kamada.kawai", dim = 3)
G <- rescale(G, -1000, 1000)

Y <- SVG(G)
Y$make()
Y$plot()
Y$width = 750
Y$height = 750
Y$make()
Y$browse()
}
}
\keyword{datasets}
