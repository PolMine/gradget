% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cooccurrences.R
\docType{class}
\name{Cooccurrences-class}
\alias{Cooccurrences}
\alias{Cooccurrences-class}
\title{Get cooccurrences.}
\arguments{
\item{keep}{character vector}

\item{returnXML}{logical, whether to return XML}

\item{verbose}{whether to be talkative}

\item{x}{a svg object}

\item{...}{parameters that will be passed}
}
\description{
Reference class to generate and manage cooccurrence statistics.
}
\details{
To reduce the size of the data.table with the cooccurrence statistics, the 
parameters \code{keep} and \code{drop} provide tokens with tokens that will be kept and
dropped, respectively. The parameters are used by the \code{trim} method.
}
\section{Fields}{

\describe{
\item{\code{partition}}{partition object}

\item{\code{pAttribute}}{character}

\item{\code{keep}}{list of named character vectors, names are p-attributes}

\item{\code{drop}}{list of named character vectors, names are p-attributes}

\item{\code{method}}{statistical test ("ll")}

\item{\code{window}}{integer}

\item{\code{verbose}}{logical}

\item{\code{contextSizes}}{data.table}

\item{\code{dt}}{data.table}
}}
\section{Methods}{

\describe{
\item{\code{as.S4()}}{Turns a Cooccurrence object (reference class) into an S4 class cooccurrences object as defined in the
polmineR base package.}

\item{\code{count()}}{Count the cooccurrence of terms. The field 'dt' is filled with a data.table with the
columns 'a_id', 'b_id' and 'count_ab'.}

\item{\code{initialize(corpus = NULL, partition = NULL, pAttribute = "word",
  window = 5L, verbose = TRUE, drop = c(polmineR::punctuation,
  tm::stopwords("de")), keep = NULL)}}{Initialize a Cooccurrences class object.}

\item{\code{makeTermCooccurrenceMatrix()}}{Returns a simple triplet matrix based on the counts of term cooccurrences. If counts are
not yet present, that is done first.}

\item{\code{maths(method = "ll")}}{Based on counts of term cooccurrences, the data.table is enriched and statistical operations
- the maths - are performed to get the significance of cooccurrences.}

\item{\code{trim(action, by.id)}}{Trim the overall list of cooccurrences by dropping terms that are not frequent. Recommended
to speed up computation of statistical test values.}
}}
\examples{
\dontrun{

standard workflow:
------------------

library(polmineR)
library(polmineR.graph)

merkel2008 <- partition("PLPRBT", speaker_name = "Angela Merkel", speaker_year = "2008", speaker_type = "speech", pAttribute = "word")
termsToDrop <- c(polmineR::punctuation, unlist(noise(pAttributes(merkel2008, pAttribute = "word"))))

Merkel <- Cooccurrences$new(partition = merkel2008, pAttribute = "word", window = 5L, drop = termsToDrop)
Merkel$count()
Merkel$trim(action = "drop", by.id = TRUE)
Merkel$maths()

bt2008 <- partition("PLPRBT", speaker_year = "2008", pAttribute = "word")
termsToDrop <- c(polmineR::punctuation, unlist(noise(pAttributes(bt2008, pAttribute = "word"))))
BT2008 <- Cooccurrences$new(partition = bt2008, pAttribute = "word", window = 5L, drop = termsToDrop)
BT2008$count()
BT2008$trim(action = "drop", by.id = TRUE)
BT2008$maths()

Merkel$featureSelection(reference = BT2008, included = TRUE)

G <- Merkel$as.igraph(as.undirected = TRUE)
G <- addCommunities(G, method = "fastgreedy", weights = FALSE)
G <- addCoordinates(G, layout = "kamada.kawai", dim = 3)
G <- rescale(G, -1000, 1000)
Y <- as.svg(G)
Y

T <- as.three(G, bgColor="0xcccccc", fontSize=12, fontColor="0x000000", nodeSize=4, edgeColor="0xeeeeee", edgeWidth=3, fontOffset=c(x=10,y=10,z=10))
T <- as.three(G, type="anaglyph", bgColor="0xcccccc", fontSize=12, fontColor="0x000000", nodeSize=4, edgeColor="0xeeeeee", edgeWidth=3, fontOffset=c(x=10,y=10,z=10))
toView <- three:::store(t, directory="/Users/blaette/Lab/tmp/three")
shiny::runApp("/Users/blaette/Lab/github/polmineR.graph/inst/three")
browseURL(toView["tmpFileJs"])

merkelSvg <- as.svg(iMerkelComm, width=1000, height=1000)
merkelSvg
}
}

