% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SVG.R
\docType{data}
\name{SVG}
\alias{SVG}
\title{Make svg for collocations graph}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
SVG
}
\description{
The resulting svg graph will have clickable nodes and edges.
}
\section{Arguments}{

\describe{
  \item{\code{edgeAttributes}}{attributes of edges to maintain}
  \item{\code{verticeAttributes}}{attributes of vertices to maintain}
  \item{\code{as.undirected}}{logical, whether to turn object into directed graph}
  \item{\code{object}}{the collocation object}
  \item{\code{layout}}{either "kamada.kawai" or "fruchterman.reingold"}
  \item{\code{width}}{the width of the svg}
  \item{\code{height}}{the height of the svg}
  \item{\code{margin}}{margins of the svg}
  \item{\code{fontSize}}{font size of the vertex labels}
  \item{\code{textOffset}}{where to put text}
  \item{\code{edgeAttributes}}{attributes of edges for tooltips}
  \item{\code{verticeAttributes}}{attributes of attributes for tooltips}
  \item{\code{pandocTab}}{logical, whether to format tables with pandoc}
}
}

\section{Methods}{

\describe{
  \item{\code{$initialize(x)}}{Create new SVG object from \code{x} as igraph-object.}
  \item{\code{$plot()}}{Show SVG in viewer pane of RStudio.}
  \item{\code{$browse()}}{Show SVG in browser. The xml/svg file is stored in a
  temporary file, which is returned invisibly."}
  \item{\code{$store(filename = tempfile(fileext=".html"))}}{Save XML/SVG to disk.}
  \item{\code{$selectCommunity(community)}}{Select a community.}
  \item{\code{$as.igraph(as.undirected = TRUE)}}{Turn SVG into igraph object.}
  \item{\code{$textNodes(fontSize = 8, textOffset = 3)}}{Make text nodes.}
  \item{\code{$html()}}{Turn into html.}
  \item{\code{$makeNodes(radius = list(minSize = 5, tf = TRUE), pandocTab = TRUE)}}{Make nodes.}
  \item{\code{$makeEdges()}}{Make edges.}
  \item{\code{$make()}}{Create SVG.}
}
}

\examples{
\dontrun{
library(polmineR)
library(polmineR.graph)

merkel2008 <- partition(
  "GERMAPARL", speaker = "Angela Merkel", year = 2008, interjection = FALSE,
  p_attribute = "word", name = "merkel2008"
  )
terms_to_drop <- c(
  polmineR::punctuation,
  unlist(noise(p_attributes(merkel2008, p_attribute = "word")))
  )

Merkel <- Cooccurrences$new(
  partition = merkel2008,
  pAttribute = "word",
  window = 5L,
  drop = terms_to_drop
)
Merkel$count()
Merkel$trim(action = "drop", by.id = TRUE)
Merkel$maths()

bt2008 <- partition(
  "GERMAPARL",
  year = 2008, interjection = "FALSE",
  p_attribute = "word", name = "bt2008"
)
terms_to_drop <- c(
  polmineR::punctuation,
  unlist(noise(p_attributes(bt2008, p_attribute = "word")))
)
BT2008 <- Cooccurrences$new(
  partition = bt2008,
  pAttribute = "word",
  window = 5L,
  drop = terms_to_drop
)
BT2008$count()
BT2008$trim(action = "drop", by.id = TRUE)
BT2008$maths()

Merkel2 <- copy(Merkel)
Merkel2$featureSelection(reference = BT2008, included = TRUE)

G <- Merkel$as.igraph(as.undirected = TRUE)
G <- addCommunities(G, method = "fastgreedy", weights = FALSE)
G <- addCoordinates(G, layout = "kamada.kawai", dim = 3)
G <- rescale(G, -1000, 1000)

Y <- SVG(G)
Y$make()
Y$plot()
Y$width = 750
Y$height = 750
Y$make()
Y$browse()
}
}
\keyword{datasets}
