% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Ego.R
\docType{class}
\name{Ego-class}
\alias{Ego-class}
\alias{Ego}
\title{Analyse ego networks of queries.}
\arguments{
\item{coi}{corpus of interest, either a partition or name of a CWB corpus (character vector length 1)}

\item{query}{query, may be a CQP query}

\item{left}{number of tokens to the left of the query}

\item{right}{number of tokens to the right of the query}

\item{pAttribute}{character vector (length 1 or more) indicating p-attributes}

\item{min.count}{minimum number of counts (in window)}

\item{min.ll}{minimum log likelihood value}

\item{max.coocs}{maximum number of cooccurrences}

\item{keep}{a named list of character vectors with tokens to be kept}

\item{drop}{a named list of character vectors with tokens to be dropped}

\item{verbose}{logical, whether to print status messages}
}
\description{
Reference class to organise the analysis of ego networks.
}
\section{Fields}{

\describe{
\item{\code{query}}{the query}

\item{\code{left}}{number of tokens to the left of the query}

\item{\code{right}}{number of tokens to the right of the query}

\item{\code{partition}}{a partition object}

\item{\code{Corpus}}{a Corpus object}

\item{\code{pAttribute}}{pAttribute(s)}

\item{\code{keep}}{named list (see arguments)}

\item{\code{drop}}{named list (see arguments)}

\item{\code{min.count}}{minimum number of counts (in window)}

\item{\code{min.ll}}{minimum log likelihood value}

\item{\code{max.coocs}}{maximum number of cooccurrences}

\item{\code{igraph}}{igraph object}

\item{\code{fontSize}}{font size}

\item{\code{layout}}{graph layout}

\item{\code{verbose}}{logical, whether to print status messages}
}}

\section{Methods}{

\describe{
\item{\code{as.SVG()}}{Turn igraph object into SVG class for plotting.}

\item{\code{calc()}}{Initiate calculation of ego network.}

\item{\code{initialize(coi, query, left = getOption("polmineR.left"),
  right = getOption("polmineR.right"),
  pAttribute = getOption("polmineR.pAttribute"), min.count = 3,
  min.ll = 10.83, max.coocs = 10, keep = list(), drop = list(word =
  c("\\"", "!", "/", ".", "[", "]")), verbose = TRUE)}}{Create new Ego object.}

\item{\code{plot(with = "networkD3")}}{Plot graph using network D3, DiagrammeR or plotly.}
}}

\examples{
\dontrun{
use("taz.beta")
E <- Ego$new(
  coi = partition("TAZ", text_date = "2010.*", regex = TRUE),
  query = "Islam",
  left = 10, right = 10,
  drop = list(
    word = c('"', '!', '/', '.', ":", "[", "]", "#", "'", ","),
    pos = c("ART", "APPR", "PRELS", "PDAT", "$(", "$.", "$,", "APPRAR",
             "VAFIN", "APPRART", "KOUI", "KON", "PPOSAT", "KOUS")
   )
)
E$calc()

E$plot(with = "networkD3")

graph <- as.dgr_graph(E$igraph)
DiagrammeR::render_graph(graph)

E$plot(with = "plotly")

S <- E$as.SVG()
S$width <- 500
S$height <- 500
S$fontSize <- 12
S$make()
S$browse()


}
}
